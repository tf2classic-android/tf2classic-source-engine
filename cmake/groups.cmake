#=============================================================================
# groups.cmake
#
# Group Configurations for all Source(TM) Projects
#=============================================================================

if( ${BUILD_GROUP} STREQUAL "game" )

	include( "${SRCDIR}/appframework/appframework.cmake" )
	include( "${SRCDIR}/bitmap/bitmap.cmake" )
	include( "${SRCDIR}/choreoobjects/choreoobjects.cmake" )
	include( "${SRCDIR}/datacache/datacache.cmake" )
	if( ${IS_WINDOWS} )
		include( "${SRCDIR}/datamodel/datamodel.cmake" )
	endif()
	include( "${SRCDIR}/dmxloader/dmxloader.cmake" )
	include( "${SRCDIR}/engine/engine.cmake" )
	include( "${SRCDIR}/engine/voice_codecs/minimp3/vaudio_minimp3.cmake" )
	include( "${SRCDIR}/engine/voice_codecs/opus/vaudio_opus.cmake" )
	include( "${SRCDIR}/filesystem/filesystem_stdio.cmake" )
	if( ${BUILD_FOLDER} STREQUAL "tf2classic" )
		include( "${SRCDIR}/game/client/client_tf2classic.cmake" )
		include( "${SRCDIR}/game/server/server_tf2classic.cmake" )
	elseif( ${BUILD_FOLDER} STREQUAL "cstrike" )
		include( "${SRCDIR}/game/client/client_cstrike.cmake" )
		include( "${SRCDIR}/game/server/server_cstrike.cmake" )
	endif()
	include( "${SRCDIR}/gameui/GameUI.cmake" )
	include( "${SRCDIR}/inputsystem/inputsystem.cmake" )
	if( BUILD_VPHYSICS AND ${BUILD_VPHYSICS_TYPE} MATCHES "IVP" )
		include( "${SRCDIR}/cmake/ivp/havana/havana_constraints.cmake" )
		include( "${SRCDIR}/cmake/ivp/havana/havok/hk_base/hk_base.cmake" )
		include( "${SRCDIR}/cmake/ivp/havana/havok/hk_math/hk_math.cmake" )
		include( "${SRCDIR}/cmake/ivp/ivp_compact_builder/ivp_compactbuilder.cmake" )
		include( "${SRCDIR}/cmake/ivp/ivp_physics/ivp_physics.cmake" )
	endif()
	include( "${SRCDIR}/launcher/launcher.cmake" )
	if( NOT ${IS_ANDROID} )
		include( "${SRCDIR}/launcher_main/launcher_main.cmake" )
	endif()
	include( "${SRCDIR}/materialsystem/materialsystem.cmake" )
	include( "${SRCDIR}/materialsystem/shaderapiempty/shaderapiempty.cmake" )
	include( "${SRCDIR}/materialsystem/shaderapidx9/shaderapidx9.cmake" )
	include( "${SRCDIR}/materialsystem/shaderlib/shaderlib.cmake" )
	include( "${SRCDIR}/materialsystem/stdshaders/stdshader_dbg.cmake" )
	include( "${SRCDIR}/materialsystem/stdshaders/stdshader_dx9.cmake" )
	include( "${SRCDIR}/materialsystem/stdshaders/game_shader_dx9_tf2classic.cmake" )
	include( "${SRCDIR}/mathlib/mathlib.cmake" )
	include( "${SRCDIR}/particles/particles.cmake" )
	include( "${SRCDIR}/scenefilecache/scenefilecache.cmake" )
	include( "${SRCDIR}/serverbrowser/ServerBrowser.cmake" )
	include( "${SRCDIR}/soundemittersystem/soundemittersystem.cmake" )
	include( "${SRCDIR}/studiorender/studiorender.cmake" )
	include( "${SRCDIR}/stub_steam/stub_steam.cmake" )
	include( "${SRCDIR}/tier0/tier0.cmake" )
	include( "${SRCDIR}/tier1/tier1.cmake" )
	include( "${SRCDIR}/tier2/tier2.cmake" )
	include( "${SRCDIR}/tier3/tier3.cmake" )
	include( "${SRCDIR}/vgui2/matsys_controls/matsys_controls.cmake" )
	include( "${SRCDIR}/vgui2/src/vgui_dll.cmake" )
	include( "${SRCDIR}/vgui2/vgui_controls/vgui_controls.cmake" )
	include( "${SRCDIR}/vgui2/vgui_surfacelib/vgui_surfacelib.cmake" )
	include( "${SRCDIR}/vguimatsurface/vguimatsurface.cmake" )
	include( "${SRCDIR}/video/video_services.cmake" )
	if( BUILD_VPHYSICS AND ${BUILD_VPHYSICS_TYPE} MATCHES "IVP" )
		include( "${SRCDIR}/vphysics/vphysics.cmake" )
	endif()
	include( "${SRCDIR}/vpklib/vpklib.cmake" )
	include( "${SRCDIR}/vstdlib/vstdlib.cmake" )
	include( "${SRCDIR}/vtf/vtf.cmake" )
	include( "${SRCDIR}/utils/vtex/vtex_dll.cmake" )
	if( NOT ${IS_ANDROID} )
		include( "${SRCDIR}/utils/vtex/vtex_launcher.cmake" )
	endif()
	if( ${IS_WINDOWS} )
		include( "${SRCDIR}/unicode/unicode.cmake" )
	endif()

	if( ${IS_WINDOWS} )
		include( "${SRCDIR}/utils/bzip2/bzip2.cmake" )
	endif()

	if( ${USE_GL} AND NOT ${IS_TOGLES} )
		include( "${SRCDIR}/togl/togl.cmake" )
	endif()

	if( ${IS_TOGLES} )
		include( "${SRCDIR}/togles/togles.cmake" )
	endif()

	#include( "${SRCDIR}/thirdparty/opus-1.4/opus.cmake" )

elseif( ${BUILD_GROUP} STREQUAL "dedicated" )

	include( "${SRCDIR}/appframework/appframework.cmake" )
	include( "${SRCDIR}/bitmap/bitmap.cmake" )
	include( "${SRCDIR}/choreoobjects/choreoobjects.cmake" )
	include( "${SRCDIR}/datacache/datacache.cmake" )
	include( "${SRCDIR}/dedicated/dedicated.cmake" )
	include( "${SRCDIR}/dedicated_main/dedicated_main.cmake" )
	include( "${SRCDIR}/dmxloader/dmxloader.cmake" )
	include( "${SRCDIR}/engine/engine.cmake" )
	if( ${BUILD_FOLDER} STREQUAL "tf2classic" )
		include( "${SRCDIR}/game/server/server_tf2classic.cmake" )
	elseif( ${BUILD_FOLDER} STREQUAL "cstrike" )
		include( "${SRCDIR}/game/server/server_cstrike.cmake" )
	endif()
	if( BUILD_VPHYSICS AND ${BUILD_VPHYSICS_TYPE} MATCHES "IVP" )
		include( "${SRCDIR}/cmake/ivp/havana/havana_constraints.cmake" )
		include( "${SRCDIR}/cmake/ivp/havana/havok/hk_base/hk_base.cmake" )
		include( "${SRCDIR}/cmake/ivp/havana/havok/hk_math/hk_math.cmake" )
		include( "${SRCDIR}/cmake/ivp/ivp_compact_builder/ivp_compactbuilder.cmake" )
		include( "${SRCDIR}/cmake/ivp/ivp_physics/ivp_physics.cmake" )
	endif()
	include( "${SRCDIR}/materialsystem/materialsystem.cmake" )
	include( "${SRCDIR}/mathlib/mathlib.cmake" )
	include( "${SRCDIR}/particles/particles.cmake" )
	include( "${SRCDIR}/scenefilecache/scenefilecache.cmake" )
	include( "${SRCDIR}/materialsystem/shaderapiempty/shaderapiempty.cmake" )
	include( "${SRCDIR}/materialsystem/shaderlib/shaderlib.cmake" )
	include( "${SRCDIR}/materialsystem/stdshaders/stdshader_dbg.cmake" ) # ???
	include( "${SRCDIR}/materialsystem/stdshaders/stdshader_dx9.cmake" ) # ???
	include( "${SRCDIR}/materialsystem/stdshaders/game_shader_dx9_tf2classic.cmake" ) # ???
	include( "${SRCDIR}/soundemittersystem/soundemittersystem.cmake" )
	include( "${SRCDIR}/studiorender/studiorender.cmake" )
	include( "${SRCDIR}/tier0/tier0.cmake" )
	include( "${SRCDIR}/tier1/tier1.cmake" )
	include( "${SRCDIR}/tier2/tier2.cmake" )
	include( "${SRCDIR}/tier3/tier3.cmake" )
	if( BUILD_VPHYSICS AND ${BUILD_VPHYSICS_TYPE} MATCHES "IVP" )
		include( "${SRCDIR}/vphysics/vphysics.cmake" )
	endif()
	include( "${SRCDIR}/vpklib/vpklib.cmake" )
	include( "${SRCDIR}/vstdlib/vstdlib.cmake" )
	include( "${SRCDIR}/vtf/vtf.cmake" )
	include( "${SRCDIR}/stub_steam/stub_steam.cmake" )

	if( ${IS_WINDOWS} )
		include( "${SRCDIR}/utils/bzip2/bzip2.cmake" )
	endif()

endif()
